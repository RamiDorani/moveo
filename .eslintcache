[{"D:\\dev\\moveo\\moveo\\src\\index.js":"1","D:\\dev\\moveo\\moveo\\src\\reportWebVitals.js":"2","D:\\dev\\moveo\\moveo\\src\\App.jsx":"3","D:\\dev\\moveo\\moveo\\src\\cmps\\Loop.jsx":"4","D:\\dev\\moveo\\moveo\\src\\service\\loopService.js":"5","D:\\dev\\moveo\\moveo\\src\\service\\utilService.js":"6","D:\\dev\\moveo\\moveo\\src\\cmps\\Recorder.jsx":"7"},{"size":514,"mtime":1609326629521,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":324,"mtime":1609425315381,"results":"11","hashOfConfig":"9"},{"size":2912,"mtime":1609429124453,"results":"12","hashOfConfig":"9"},{"size":2097,"mtime":1609422953434,"results":"13","hashOfConfig":"9"},{"size":334,"mtime":1609327743735,"results":"14","hashOfConfig":"9"},{"size":1565,"mtime":1609429654659,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cir3f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\moveo\\moveo\\src\\index.js",[],["33","34"],"D:\\dev\\moveo\\moveo\\src\\reportWebVitals.js",[],"D:\\dev\\moveo\\moveo\\src\\App.jsx",["35"],"import React, { Component } from 'react'\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { Loop } from './cmps/Loop'\nimport { Recorder } from './cmps/Recorder'\n\n\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Loop />\n        <Recorder />\n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n","D:\\dev\\moveo\\moveo\\src\\cmps\\Loop.jsx",["36"],"import React, { Component } from 'react'\r\n\r\n\r\nimport { loopService } from '../service/loopService'\r\n\r\n\r\nexport class Loop extends Component {\r\n\r\n    state = {\r\n        loops: null,\r\n        flag: false,\r\n    }\r\n\r\n    //create Refs for the audio tags\r\n    elAudioTag0 = React.createRef();\r\n    elAudioTag1 = React.createRef();\r\n    elAudioTag2 = React.createRef();\r\n    elAudioTag3 = React.createRef();\r\n    elAudioTag4 = React.createRef();\r\n    elAudioTag5 = React.createRef();\r\n    elAudioTag6 = React.createRef();\r\n    elAudioTag7 = React.createRef();\r\n    elAudioTag8 = React.createRef();\r\n\r\n\r\n    \r\n    async componentDidMount() {\r\n        const loops = await loopService.query();\r\n        this.setState({ loops: loops })\r\n    }\r\n\r\n    //main function-controls the pad and the loop\r\n    onChangesStatus = (id, idx) => {\r\n        const { flag } = this.state\r\n        const status = loopService.changeStatus(id);\r\n        this.setState({ flag: !flag });\r\n        const loop = loopService.getLoopById(id);\r\n\r\n        if (status) {\r\n            const idxIsAlreadyOn = loopService.checkIfAlreadyOn(id); //check if there pad that is already on.\r\n            if (idxIsAlreadyOn >= 0) {// if true i capture the current time according to Refs\r\n                var test = this[`elAudioTag${idxIsAlreadyOn}`].current.currentTime;\r\n                this[`elAudioTag${idx}`].current.currentTime = test;\r\n            }\r\n            this[`elAudioTag${idx}`].current.controls = true;\r\n            this[`elAudioTag${idx}`].current.play();\r\n            this[`elAudioTag${idx}`].current.loop = true;\r\n        } else {\r\n            this[`elAudioTag${idx}`].current.controls = false;\r\n            this[`elAudioTag${idx}`].current.pause();\r\n            this[`elAudioTag${idx}`].current.loop = false;\r\n            this[`elAudioTag${idx}`].current.load();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loops } = this.state\r\n        if (!loops) return <div>loading...</div>\r\n        console.log(loops);\r\n\r\n        return (\r\n            <div>\r\n                <h1>LOOP MACHINE</h1>\r\n                <section className=\"loops-wrapper\">\r\n                    {\r\n                        loops.map((loop, idx) => <div key={loop._id} className=\"loop-card flex-col\">\r\n                            <button className=\"status-header\" onClick={() => {\r\n                                this.onChangesStatus(loop._id, idx)\r\n                            }}>{loop.status}</button>\r\n                            <h3 className=\"name-header\">Loop Name: <span className=\"name-span\">{loop.name}</span></h3>\r\n                            <audio ref={this[`elAudioTag${idx}`]} className='loop-audio'>\r\n                                <source src={loop.sound} type=\"audio/mpeg\" />\r\n                            </audio>\r\n                        </div>)\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\dev\\moveo\\moveo\\src\\service\\loopService.js",[],"D:\\dev\\moveo\\moveo\\src\\service\\utilService.js",[],"D:\\dev\\moveo\\moveo\\src\\cmps\\Recorder.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":24,"nodeType":"43","messageId":"44","endLine":2,"endColumn":30},{"ruleId":"41","severity":1,"message":"45","line":37,"column":15,"nodeType":"43","messageId":"44","endLine":37,"endColumn":19},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'loop' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]